let buttonColours = ["red", "blue", "green", "yellow"]; //An array containing the four possible colors in the game: red, blue, green, and yellow.

let gamePattern = []; //An array that stores the sequence of colors generated by the game that the user has to follow

let userClickedPattern = []; //An array that stores the sequence of colors clicked by the user.

let started= false; //A boolean variable that checks whether the game has started or not.

 let level = 0;  //A variable that tracks the current level of the game.

// Starting the game: This function listens for a key press on the keyboard

/*When a key is pressed and the game hasn’t started yet (started is false), it updates the #level-title element to display the current level (which starts at 0), calls nextSequence() to start the game, and sets started to true to indicate the game has begun.*/

$(document).keydown(function(){

    if (!started){

        $("#level-title").text("Level "+level);

        nextSequence();

        started= true;

    }

});

// This function is triggered whenever one of the color buttons (.btn) is clicked.

$(".btn").click(function() {
    // userChosenColour: The color ID of the button that the user clicked.
    let userChosenColour = $(this).attr("id");

    // userClickedPattern.push(userChosenColour): Adds the clicked color to the userClickedPattern array.
    userClickedPattern.push(userChosenColour);
    // playSound(userChosenColour): Plays a sound corresponding to the clicked color.
    playSound(userChosenColour);

    // animatePress(userChosenColour): Adds an animation effect to the clicked button.
    animatePress(userChosenColour);

    //  Checks the user's input to see if it matches the game’s sequence.
    checkAnswer(userClickedPattern.length - 1);
});

// checkAnswer(currentLevel): Compares the user’s most recent input (userClickedPattern[currentLevel]) with the corresponding value in the gamePattern.
function checkAnswer(currentLevel) {
    if (gamePattern[currentLevel] === userClickedPattern[currentLevel]) {
        // If the user has finished the sequence
        if (userClickedPattern.length === gamePattern.length) {
            setTimeout(function() {
                nextSequence();
            }, 1000);
        }
    } else {
        // If the user gets it wrong
        playSound("wrong");
        $("body").addClass("game-over");
        $("#level-title").text("Game Over, Press Any Key to Restart");

        setTimeout(function() {
            $("body").removeClass("game-over");
        }, 200);

        startOver();
    }
}


function startOver() {

  level = 0;
  gamePattern = [];
  started = false;
}






function nextSequence() {

    userClickedPattern = [];

    level++;

    $("#level-title").text("Level "+level)



    let randomNumber = Math.floor(Math.random() * 4);
    let randomChosenColour = buttonColours[randomNumber];
    gamePattern.push(randomChosenColour);

    // Flash the button
    $(`#${randomChosenColour}`).fadeIn(100).fadeOut(100).fadeIn(100);

    // Play the sound for the randomly chosen colour
   playSound(randomChosenColour);
    // console.log(userClickedPattern);
}


// $("#"+randomChosenColour);



function playSound(name){
 let sound = new Audio(`sounds/${name}.mp3`);
    sound.play();

}

function animatePress(currentColour){

    $(`#${currentColour}`).addClass("pressed");

setTimeout(function(){
    $(`#${currentColour}`).removeClass("pressed");
},100);
}


// function colourSound(sound){
//     switch(sound){
//         case "blue":
//             let blue = new Audio("./sounds/blue.mp3")
//             blue.play();
//         break;

//         case "green":
//             let green = new Audio("./sounds/green.mp3")
//             green.play();
//         break;    

//         case "red":
//             let red = new Audio("./sounds/red.mp3")
//             red.play();
//         break;    
//         case "yellow":
//             let yellow = new Audio("./sounds/yellow.mp3")
//             yellow.play();
//         break;    
//         case "wrong":
//             let wrong = new Audio("./sounds/wrong.mp3")
//             wrong.play();
//         break;    


//         default
//     }
// }